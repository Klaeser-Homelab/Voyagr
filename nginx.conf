server {
    listen 80;
    listen [::]:80;
    server_name _;  # Accept all hostnames

    # Root directory and index file
    root /usr/share/nginx/html;
    index index.html;

    # Handle React Router
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Proxy API requests to backend
    location /api {
        proxy_pass http://backend:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

# Once everything is working, we can uncomment this HTTPS server block
# server {
#     listen 443 ssl;
#     listen [::]:443 ssl;
#     server_name voyagr.me www.voyagr.me;

#     # SSL configuration
#     ssl_certificate /etc/nginx/ssl/live/voyagr.me/fullchain.pem;
#     ssl_certificate_key /etc/nginx/ssl/live/voyagr.me/privkey.pem;
    
#     # SSL settings
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers on;
#     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
#     ssl_session_timeout 1d;
#     ssl_session_cache shared:SSL:50m;
#     ssl_session_tickets off;
#     ssl_stapling on;
#     ssl_stapling_verify on;
#     resolver 8.8.8.8 8.8.4.4 valid=300s;
#     resolver_timeout 5s;

#     # Root directory and index file
#     root /usr/share/nginx/html;
#     index index.html;

#     # Handle React Router
#     location / {
#         try_files $uri $uri/ /index.html;
#     }

#     # Proxy API requests to backend
#     location /api {
#         proxy_pass http://backend:3001;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }
# } 