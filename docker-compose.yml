services:
  frontend:
    image: manageme-frontend:latest
    container_name: manageme-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    networks:
      - manageme-network
    depends_on:
      - backend
  backend:
    image: manageme-backend:latest
    container_name: manageme-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    networks:
      - manageme-network
    environment:
      # Sequelize environment variables
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: journeyman_db
      DB_USER: postgres
      DB_PASSWORD: postgres
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      SESSION_SECRET: ${SESSION_SECRET}
      FRONTEND_URL: ${FRONTEND_URL}
      NODE_ENV: production
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:16
    container_name: journeyman_db
    environment:
      POSTGRES_DB: journeyman_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - manageme-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: manageme-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "5050:80"
    networks:
      - manageme-network
    depends_on:
      - postgres

volumes:
  postgres_data:

networks:
  manageme-network:
    external: true